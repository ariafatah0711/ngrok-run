#!/bin/bash

# Daftar tunnel dengan path ke file config masing-masing
declare -A TUNNELS
TUNNELS["tun-1"]="/etc/ngrok-run/config.yaml"
TUNNELS["tun-2"]="/home/ariafatah/config.yaml"
# TUNNELS["tun-3"]="/etc/ngrok-run/config3.yaml"

# Fungsi untuk memulai Ngrok dengan tunnel tertentu
start_ngrok() {
    local tunnel="$1"

    if [[ "$tunnel" == "all" ]]; then
        echo "Starting all Ngrok tunnels..."
        local i=4040
        for key in "${!TUNNELS[@]}"; do
            echo "Starting tunnel: $key on Web Interface Port: $i"
            ngrok start --config "${TUNNELS[$key]}" --all --log "stdout" --log-format "term" --log-level "info" 1>/dev/null &
            ((i++))  # Increment port for next tunnel
        done
    elif [[ -n "${TUNNELS[$tunnel]}" ]]; then
        echo "Starting Ngrok tunnel: $tunnel..."
        ngrok start --config "${TUNNELS[$tunnel]}" --all --log "stdout" --log-format "term" --log-level "info" 1>/dev/null &
    else
        echo "Error: Tunnel '$tunnel' not found."
        exit 1
    fi

    list_tunnels
}

# Fungsi untuk menghentikan Ngrok
stop_ngrok() {
    echo "Stopping Ngrok..."
    pkill ngrok
}

# Fungsi untuk menampilkan semua tunnel yang sedang berjalan
list_tunnels() {
    local port=4040
    for key in "${!TUNNELS[@]}"; do
        echo "Fetching tunnels from Web Interface on port $port..."
        response=$(curl -s http://localhost:$port/api/tunnels)
        if [[ $? -eq 0 ]]; then
            echo "$response" | jq -r '.tunnels[] | {url: .public_url, addr: .config.addr, proto: .proto} | @base64' | while read line; do
                _jq() {
                    echo "${line}" | base64 --decode | jq -r "${1}"
                }
                if [[ $(_jq '.proto') == "tcp" ]]; then
                    echo "TCP URL: $(_jq '.url') --> Forwarding to: $(_jq '.addr')"
                else
                    echo "HTTP URL: $(_jq '.url') --> Forwarding to: $(_jq '.addr')"
                fi
            done
        else
            echo "No tunnels found on port $port."
        fi
        ((port++))  # Increment port for next tunnel
    done
}

# Main case statement untuk mengelola perintah
case "$1" in
    start)
        case "$2" in
            all)
                start_ngrok "all"
                ;;
            *)
                if [[ -z "$2" ]]; then
                    echo "Starting all tunnels by default..."
                    start_ngrok "all"
                else
                    start_ngrok "$2"
                fi
                ;;
        esac
        ;;
    stop)
        stop_ngrok
        ;;
    list)
        list_tunnels
        ;;
    *)
        echo "Usage: $0 {start|stop|list} [tun-1|tun-2|all]"
        ;;
esac
